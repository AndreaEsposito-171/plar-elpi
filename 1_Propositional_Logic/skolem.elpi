%%% ===========================================================================
%%% Skolemization.
%%% ===========================================================================

accumulate lib.
accumulate formula.
accumulate prop.
accumulate fol.

%%% ---------------------------------------------------------------------------
%%% Datatype for skolemized formulas.
%%% ---------------------------------------------------------------------------

% Add quantifier for functor to the syntax of formulas.
% A functor takes a list of terms and returns a term.
type fc ((list term -> term) -> formula) -> formula.

pred skolem i:formula, o:formula.
skolem (P && Q) R :- !, ((pi P Q \ binop P Q (P && Q)) => skolem.binop P Q R).
skolem (P !! Q) R :- !, ((pi P Q \ binop P Q (P !! Q)) => skolem.binop P Q R).
skolem (ex P) (fc f \ Q (f [])) :- !, pi x \ skolem (P x) (Q x).
skolem (all P) Q :- !, pi x \ skolem (P x) (Q1 x), skolem.all Q Q1.
skolem P P.

pred binop i:formula, i:formula, o:formula.
pred skolem.binop i:formula, i:formula, o:formula.
skolem.binop P Q R :- skolem P P1, skolem Q Q1, skolem.op P1 Q1 R.

pred skolem.op i:formula, i:formula, o:formula.
skolem.op (fc P) Q (fc R) :- !, pi x \ skolem.op (P x) Q (R x).
skolem.op P (fc Q) (fc R) :- !, pi x \ skolem.op P (Q x) (R x).
skolem.op P Q R :- binop P Q R.

pred skolem.all o:formula, i:(term -> formula).
skolem.all (fc f \ all x \ P x (Xs \ f [x|Xs])) (x \ fc f \ P x f) :- !.
skolem.all (all Q) Q.

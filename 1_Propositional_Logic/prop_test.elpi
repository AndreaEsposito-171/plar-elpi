accumulate "prop".

type p, q, r formula.

atomic P :- std.mem! [p,q,r] P.

main :- run_tests
    [ report "Test eval"
    , (kob R \
         [ (eval p tt :- !)
         , (eval q ff :- !)
         ] => eval (p && q) R)
    , (okb R \
         [(eval p tt :- !)
         , (eval q tt :- !)
         ] => eval (p && q) R)
    , report "Test atoms"
    , ok_eq [q, p] (atoms (p && q !! p))
    , report "Test truth table"
    , ok (truthtable (p && q !! (p ==> r)))
    , ok (truthtable (neg p !! q))
    , report "Test tautology"
    , ok (tautology (neg p !! p))
    , ok (tautology (falsity ==> p))
    , ko (tautology (neg p !! q))
    , report "Test satisfiable"
    , ok (satisfiable (neg p !! p))
    , ok (satisfiable (neg p !! q))
    , ko (satisfiable (neg p && p))
    , report "Test unsatisfiable"
    , ok (unsatisfiable (neg p && p))
    , ko (unsatisfiable (neg p !! q))
    , ko (unsatisfiable (neg p && q))
    , ko (unsatisfiable (neg p !! p))
    ].


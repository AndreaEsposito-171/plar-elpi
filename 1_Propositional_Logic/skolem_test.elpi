%%% ===========================================================================
%%% Skolemization.
%%% ===========================================================================

accumulate lib.
accumulate formula.
accumulate prop.
accumulate fol.
accumulate skolem.
accumulate verbosity.
accumulate test.

%%% ---------------------------------------------------------------------------
%%% Auxiliary constructions for testing.
%%% ---------------------------------------------------------------------------

type u formula.
type p term -> formula.
type r term -> term -> formula.
type a, b term.
type f term -> term -> term.

%%% ---------------------------------------------------------------------------
%%% Run tests.
%%% ---------------------------------------------------------------------------

shorten test.{ run-tests, ok, ko, okb, kob, ok-eq, section }.
shorten verbosity.{ quiet, terse, info, verbose, debug, with-verbosity }.

main :-
  with-verbosity quiet (run-tests
  [ section "Skolemization"
  , (ok-eq u (skolem u))
  , (ok-eq (p a) (skolem (p a)))
  , (ok-eq (p a && u) (skolem (p a && u)))
  , (ok-eq (all x \ p x) (skolem (all x \ p x)))
  , (ok-eq (all x \ u !! p x) (skolem (all x \ u !! p x)))
  , (ok-eq (fc  f \ p (f[])) (skolem (ex  x \ p x)))
  , (ok-eq (fc  f \ u && p (f[])) (skolem (ex  x \ u && p x)))
  , (ok-eq (u !! all x \ p x) (skolem (u !! all x \ p x)))
  , (ok-eq (fc f \ u && p (f[])) (skolem (u && ex x \ p x)))
  , (ok-eq (fc f \ all x \ r x (f[x])) (skolem (all x \ ex y \ r x y)))
  , (ok-eq (fc f \ all x \ all z \ p z !! r x (f[x]))
           (skolem (all x \ ex y \ all z \ p z !! r x y)))
  , (ok-eq (fc f \ all x \ all z \ p z && r x (f[x,z]))
           (skolem (all x \ all z \ ex y \ p z && r x y)))
  ]).
